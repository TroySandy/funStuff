const canvas = document.getElementById("canvas1");
const ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let particleArray = [];

//handle mouse interactions
const mouse = {
  x: null,
  y: null,
  radius: 150,
};

window.addEventListener("mousemove", function (event) {
  mouse.x = event.x;
  mouse.y = event.y;
//   console.log(mouse.x, mouse.y);
});

//draw text on canvas
ctx.fillStyle = 'white';
ctx.font = '30px Helvetica';
ctx.fillText("A", 0, 30);
const data = ctx.getImageData(0, 0, 500, 500);

class Particle{
    constructor(x, y){
        this.x = x;
        this.y = y;
        this.size = 1;
        this.baseX = this.x;
        this.baseY = this.y;
        this.density = (Math.random()*30)+1;
    }
    draw(){
        ctx.fillStyle = "red";
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.closePath();
        ctx.fill();
    }
    update(){
        let dx = mouse.x - this.x;
        let dy = mouse.y - this.y;
        let distance = Math.sqrt(dx * dx + dy * dy);
        if (distance < 50){
            this.size = 8
        }else{
            this.size = 1
        }
    }
}

function init(){
    particleArray = [];
    for(let i = 0; i < 5000; i++){
        let x = Math.random() * 500;
        let y = Math.random() * 500;
        particleArray.push(new Particle(x,y));
    }
    
}
init();
// console.log(particleArray);

function animate(){
    ctx.clearRect(0,0, canvas.width, canvas.height);
    for(let i = 0; i < particleArray.length; i++){
        particleArray[i].draw();
        particleArray[i].update();
    }
    requestAnimationFrame(animate); 
}
animate();

for one letter!!!!!!!!!
const canvas = document.getElementById("canvas1");
const ctx = canvas.getContext("2d");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let particleArray = [];

//handle mouse interactions
const mouse = {
  x: null,
  y: null,
  radius: 150,
};

window.addEventListener("mousemove", function (event) {
  mouse.x = event.x;
  mouse.y = event.y;
  //   console.log(mouse.x, mouse.y);
});

//draw text on canvas
ctx.fillStyle = "white";
ctx.font = "30px Helvetica";
ctx.fillText("A", 0, 30);
const textCoordinates = ctx.getImageData(0, 0, 100, 100);

class Particle {
  constructor(x, y) {
    this.x = x;
    this.y = y;
    this.size = 1;
    this.baseX = this.x;
    this.baseY = this.y;
    this.density = Math.random() * 10;
  }
  draw() {
    ctx.fillStyle = "red";
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
    ctx.closePath();
    ctx.fill();
  }
  update() {
    let dx = mouse.x - this.x;
    let dy = mouse.y - this.y;
    let distance = Math.sqrt(dx * dx + dy * dy);
    let forceDirectionX = dx / distance;
    let forceDirectiony = dy / distance;
    let maxDistance = mouse.radius;
    let force = (maxDistance - distance) / maxDistance;
    let directionX = forceDirectionX * force * this.density;
    let directiony = forceDirectiony * force * this.density;
    if (distance < mouse.radius) {
      this.x -= directionX;
      this.y -= directiony;
    } else {
      if(this.x !== this.baseX){
          let dx = this.x - this.baseX;
          this.x -= dx/10
      }
      if (this.y !== this.baseY){
        let dy = this.y - this.baseY;
        this.y -= dy/10;}
    }
  }
}

function init() {
  particleArray = [];
  for(let y = 0, y2 = textCoordinates.height; y<y2; y++){
      for(let x = 0, x2 = textCoordinates.width; x<x2 ; x++){
        if(textCoordinates.data[(y*4*data.width)+ (x*4+3)] > 128){ //checks for .5 opacity
            let positionX = x;
            let positionY = y;
            particleArray.push(new Particle(positionX, positionY))
        }
      }

  }
}
init();
// console.log(particleArray);

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  for (let i = 0; i < particleArray.length; i++) {
    particleArray[i].draw();
    particleArray[i].update();
  }
  requestAnimationFrame(animate);
}
animate();
